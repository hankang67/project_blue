plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
//	id 'com.diffplug.spotless' version '6.23.3'
}

group = 'com.sparta'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// bcrypt
	implementation 'at.favre.lib:bcrypt:0.10.2'

	// jwt
	compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	// querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// slack
	implementation "com.slack.api:bolt:1.18.0"
	implementation "com.slack.api:bolt-servlet:1.18.0"
	implementation "com.slack.api:bolt-jetty:1.18.0"
	implementation 'com.slack.api:slack-api-client:1.30.0'

	// AWS SDK S3
	implementation 'software.amazon.awssdk:s3:2.20.1'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// JSON
	implementation 'com.googlecode.json-simple:json-simple:1.1'

	//OAuth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	//Elasticsearch
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'co.elastic.clients:elasticsearch-java:8.10.2'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Redisson
	implementation 'org.redisson:redisson-spring-boot-starter:3.27.0'

	// JUnit 5 (Jupiter)
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'

	// Mockito dependencies
	testImplementation 'org.mockito:mockito-core:5.5.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'

	// mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// monitoring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-core'
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// PaymentTest
	testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.3'

	// logback
	implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
}

tasks.named('test') {
	useJUnitPlatform()
}

//tasks.named('compileJava') {
//	dependsOn 'spotlessApply'
//}
//
//spotless {
//	java {
//		googleJavaFormat().aosp()
//		// 아래 순서로 import문 정렬
//		importOrder('java', 'javax', 'jakarta', 'org', 'com')
//		// 사용하지 않는 import 제거
//		removeUnusedImports()
//		// 각 라인 끝에 있는 공백을 제거
//		trimTrailingWhitespace()
//		// 파일 끝에 새로운 라인 추가
//		endWithNewline()
//	}
//}
